plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'org.sonarqube' version '6.0.1.5171'
    id 'war'
}

group = 'com.cutit.laboratorio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sonar {
    properties {
        property "sonar.projectKey", "laboratoriofinal_laboratorio"  // Reemplaza con tu project key real
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "laboratoriofinal-1"              // Reemplaza con tu organizaci√≥n real
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml" 
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.sonar {
    dependsOn jacocoTestReport
}

bootWar {
    archiveFileName = 'laboratorio-ms.war'
}
